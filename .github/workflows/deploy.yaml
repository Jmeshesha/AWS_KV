name: deploy 
on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
    paths-ignore:
      - '.github/workflows/**'
      - 'deployment_scripts/**'
      - 'README.md'
      - 'components/tests/**'

jobs:
  get-deploy-version:
    runs-on: ubuntu-latest
    outputs: 
      deploy-version: ${{steps.new_deployment.outputs.new_version}}
    steps:
      - name: 'Get latest deployment version from dockerhub tags'
        id: current_deployment
        run: echo "version=$(curl -L --fail "https://hub.docker.com/v2/repositories/owens518/gc_kv_store/tags/?page_size=100" | jq '.results | .[] | .name' -r | sed 's/latest//' | sort --version-sort | tail -n 1 | cut -c2-)" >> "$GITHUB_OUTPUT"
      
      - name: 'Calculate new deployment version'
        id: new_deployment
        run: echo "new_version=$((${{steps.current_deployment.outputs.version}} + 1))" >> "$GITHUB_OUTPUT"

  deploy-to-dockerhub:
    needs: get-deploy-version
    runs-on: ubuntu-latest
    outputs:
      deploy-version: ${{needs.get-deploy-version.outputs.deploy-version}} 
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: components/
          tags: owens518/gc_kv_store:v${{needs.get-deploy-version.outputs.deploy-version}}

      

  deploy-to-gcp:
    needs: deploy-to-dockerhub
    uses: ./.github/workflows/update-gcp-image.yaml
    with:
      deployment_version: ${{needs.deploy-to-dockerhub.outputs.deploy-version}}
    secrets: 
      gcp_credentials: ${{ secrets.GCP_SERVICE_ACCOUNT_CREDENTIALS }}
      db_username: ${{ secrets.DB_USERNAME }}
      db_password: ${{ secrets.DB_PASSWORD }}
          
